//to give features to host later on
//such as immunity, probability of coming in contact with vector(mosquito)
//is immune to dengue?(DEN1 strain, the most common) i.e. has had Dengue before

using namespace std;

void runSim(){

    //running the simulation for 45 days
    for(int i = 0; i<PERIOD; i++){
        
        //number of infected hosts at the start of each day = 0
        infected.push_back(0);
        
        //running the infectionRate(probability) for each host for that day
        for(int j = 0; j<totalHosts; j++){
        
            //immunity is generated by rand().
            //if immunity is less than infectionRate, then host gets infected
            float immunity = (double) rand() / (RAND_MAX);
            if(immunity < infectionRate){
                //increase number of infections for that day
                infected[i]++;
                //decarease total number of hosts on campus
                totalHosts--;
            }
        
        }
    }

} 


//utilises Host.isImmune to not infect hosts who have
//already once had DEN1 strain
void runSim2(vector<Host> &hosts){

    //running the simulation for 45 days
    for(int i = 0; i<PERIOD; i++){
        
        //number of infected hosts at the start of each day = 0
        infected.push_back(0);
        
        //running the infectionRate(probability) for each host for that day
        for(int j = 0; j<hosts.size(); j++){
        
            //immunity is generated by rand().
            //if immunity is less than infectionRate, then host gets infected
            float immunity = (double) rand() / (RAND_MAX);
            if(immunity < infectionRate && !hosts[i].isImmune){
                //increase number of infections for that day
                infected[i]++;
                //decarease total number of hosts on campus
                hosts.erase(hosts.begin() + j);
            } else if (immunity<infectionRate && hosts[i].isImmune)
                    cout<<"YEH RAHA"<<endl;
        
        }
    }

}